name: 'publish-api-image'
description: 'Publish API Image to AWS ECR'

inputs:
  dockerfile:
    description: 'Path to the Dockerfile'
    required: true
    default: './Dockerfile'

  main-class:
    description: 'Main class or entry point for the Java application'
    required: true
    default: 'fplarache.smartlib.notifications'

  image-short-name:
    description: 'Short name of the Docker image'
    required: true
    default: 'dev-fpl-larache-smart-lib'

  image-prefix:
    description: 'Prefix for the Docker image'
    required: true
    default: 'service-notification-repo'

  image-tag:
    description: 'Tag for the Docker image'
    required: true
    default: 'v1.0.0'

  ecr-registry:
    description: 'AWS ECR registry'
    required: true
    default: '774305596814.dkr.ecr.eu-north-1.amazonaws.com'

  maven-environment:
    description: 'Maven build environment'
    required: true

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        # DÃ©finir le nom complet de l'image
        export IMAGENAME=${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}
        
        echo "Building Java project with Maven..."
        mvn clean package -DskipTests
        
        echo "Building Docker image..."
        docker build \
          --build-arg JAVA_MAIN_CLASS=${{ inputs.main-class }} \
          -f ${{ inputs.dockerfile }} \
          -t $IMAGENAME:${{ inputs.image-tag }} .
        
        echo "Tagging Docker image..."
        docker tag $IMAGENAME:${{ inputs.image-tag }} $IMAGENAME:latest
        
        echo "Pushing Docker image to ECR..."
        docker login
        docker push $IMAGENAME:${{ inputs.image-tag }}
        docker push $IMAGENAME:latest
