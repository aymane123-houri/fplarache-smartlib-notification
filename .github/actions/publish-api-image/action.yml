name: 'publish api image'
description: 'Publish API Image to AWS ECR'

inputs:
  maven-environment:
    description: 'Maven environment to use (e.g., dev or prod)'
    required: true
    default: 'dev'

  dockerfile:
    description: 'Path to the Dockerfile'
    required: true
    default: './Dockerfile'

  main-class:
    description: 'Main class or entry point for the Java application'
    required: true
    default: 'fplarache.smartlib.notifications'

  image-short-name:
    description: 'Short name of the Docker image'
    required: true
    default: 'dev-fpl-larache-smart-lib'

  image-prefix:
    description: 'Prefix for the Docker image'
    required: true
    default: 'service-notification-repo'

  image-tag:
    description: 'Tag for the Docker image'
    required: true
    default: 'v1.0.0'

  ecr-registry:
    description: 'AWS ECR registry'
    required: true
    default: '774305596814.dkr.ecr.eu-north-1.amazonaws.com'

runs:
  using: "composite"
  steps:
    - shell: bash
      run: |
        export IMAGENAME=${{ inputs.ecr-registry }}/${{ inputs.image-prefix }}-${{ inputs.image-short-name }}
        
        # Construction du projet Maven
        mvn clean package -DskipTests -P${{ inputs.maven-environment }}
        
        # Construire l'image Docker
        docker build --build-arg JAVA_MAIN_CLASS=${{ inputs.main-class }} -f ${{ inputs.dockerfile }} -t $IMAGENAME:${{ inputs.image-tag }} .
        
        # Tagging et push
        docker tag $IMAGENAME:${{ inputs.image-tag }} $IMAGENAME:latest
        docker push $IMAGENAME:${{ inputs.image-tag }}
        docker push $IMAGENAME:latest
